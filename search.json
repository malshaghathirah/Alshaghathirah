[
  {
    "objectID": "Untitled39.html",
    "href": "Untitled39.html",
    "title": "Mohammed Alshaghathirah",
    "section": "",
    "text": "!pip install pyreadstat\n\nimport pandas as pd\nimport pyreadstat\n\n# Load the data\ndf, meta = pyreadstat.read_dta(\"/content/karlan_list_2007(1).dta\")\n\n# Preview the data\ndf.head()\n\nCollecting pyreadstat\n  Downloading pyreadstat-1.2.8-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (1.0 kB)\nRequirement already satisfied: pandas&gt;=1.2.0 in /usr/local/lib/python3.11/dist-packages (from pyreadstat) (2.2.2)\nRequirement already satisfied: numpy&gt;=1.23.2 in /usr/local/lib/python3.11/dist-packages (from pandas&gt;=1.2.0-&gt;pyreadstat) (2.0.2)\nRequirement already satisfied: python-dateutil&gt;=2.8.2 in /usr/local/lib/python3.11/dist-packages (from pandas&gt;=1.2.0-&gt;pyreadstat) (2.8.2)\nRequirement already satisfied: pytz&gt;=2020.1 in /usr/local/lib/python3.11/dist-packages (from pandas&gt;=1.2.0-&gt;pyreadstat) (2025.2)\nRequirement already satisfied: tzdata&gt;=2022.7 in /usr/local/lib/python3.11/dist-packages (from pandas&gt;=1.2.0-&gt;pyreadstat) (2025.2)\nRequirement already satisfied: six&gt;=1.5 in /usr/local/lib/python3.11/dist-packages (from python-dateutil&gt;=2.8.2-&gt;pandas&gt;=1.2.0-&gt;pyreadstat) (1.17.0)\nDownloading pyreadstat-1.2.8-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (2.9 MB)\n   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 2.9/2.9 MB 26.7 MB/s eta 0:00:00\nInstalling collected packages: pyreadstat\nSuccessfully installed pyreadstat-1.2.8\n\n\n\n  \n    \n\n\n\n\n\n\ntreatment\ncontrol\nratio\nratio2\nratio3\nsize\nsize25\nsize50\nsize100\nsizeno\n...\nredcty\nbluecty\npwhite\npblack\npage18_39\nave_hh_sz\nmedian_hhincome\npowner\npsch_atlstba\npop_propurban\n\n\n\n\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n...\n0\n1\n0.446493\n0.527769\n0.317591\n2.10\n28517\n0.499807\n0.324528\n1.0\n\n\n1\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n...\n1\n0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n2\n1\n0\n1\n0\n0\n3\n0\n0\n1\n0\n...\n0\n1\n0.935706\n0.011948\n0.276128\n2.48\n51175\n0.721941\n0.192668\n1.0\n\n\n3\n1\n0\n1\n0\n0\n4\n0\n0\n0\n1\n...\n1\n0\n0.888331\n0.010760\n0.279412\n2.65\n79269\n0.920431\n0.412142\n1.0\n\n\n4\n1\n0\n1\n0\n0\n2\n0\n1\n0\n0\n...\n0\n1\n0.759014\n0.127421\n0.442389\n1.85\n40908\n0.416072\n0.439965\n1.0\n\n\n\n\n5 rows × 51 columns\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n\n    \n  \n\n\nDistributions\n\n\n\n      \n        \n      \n      \n      \n\n\n      \n        \n      \n      \n      \n\n\n      \n        \n      \n      \n      \n\n\n      \n        \n      \n      \n      \n\n\nCategorical distributions\n\n\n\n      \n        \n      \n      \n      \n\n\n      \n        \n      \n      \n      \n\n\n      \n        \n      \n      \n      \n\n\n      \n        \n      \n      \n      \n\n\n2-d distributions\n\n\n\n      \n        \n      \n      \n      \n\n\n      \n        \n      \n      \n      \n\n\n      \n        \n      \n      \n      \n\n\n      \n        \n      \n      \n      \n\n\nTime series\n\n\n\n      \n        \n      \n      \n      \n\n\n      \n        \n      \n      \n      \n\n\n      \n        \n      \n      \n      \n\n\n      \n        \n      \n      \n      \n\n\nValues\n\n\n\n      \n        \n      \n      \n      \n\n\n      \n        \n      \n      \n      \n\n\n      \n        \n      \n      \n      \n\n\n      \n        \n      \n      \n      \n\n\n2-d categorical distributions\n\n\n\n      \n        \n      \n      \n      \n\n\n      \n        \n      \n      \n      \n\n\n      \n        \n      \n      \n      \n\n\n      \n        \n      \n      \n      \n\n\nFaceted distributions\n\n\n\n&lt;string&gt;:5: FutureWarning: \n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n\n\n      \n        \n      \n      \n      \n\n\n&lt;string&gt;:5: FutureWarning: \n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n\n\n      \n        \n      \n      \n      \n\n\n&lt;string&gt;:5: FutureWarning: \n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n\n\n      \n        \n      \n      \n      \n\n\n&lt;string&gt;:5: FutureWarning: \n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n\n\n      \n        \n      \n      \n      \n\n\n\n# Check column names\ndf.columns\n\nIndex(['treatment', 'control', 'ratio', 'ratio2', 'ratio3', 'size', 'size25',\n       'size50', 'size100', 'sizeno', 'ask', 'askd1', 'askd2', 'askd3', 'ask1',\n       'ask2', 'ask3', 'amount', 'gave', 'amountchange', 'hpa', 'ltmedmra',\n       'freq', 'years', 'year5', 'mrm2', 'dormant', 'female', 'couple',\n       'state50one', 'nonlit', 'cases', 'statecnt', 'stateresponse',\n       'stateresponset', 'stateresponsec', 'stateresponsetminc', 'perbush',\n       'close25', 'red0', 'blue0', 'redcty', 'bluecty', 'pwhite', 'pblack',\n       'page18_39', 'ave_hh_sz', 'median_hhincome', 'powner', 'psch_atlstba',\n       'pop_propurban'],\n      dtype='object')\n\n\n\n# Basic summary stats\ndf.describe()\n\n\n  \n    \n\n\n\n\n\n\ntreatment\ncontrol\nratio\nratio2\nratio3\nsize\nsize25\nsize50\nsize100\nsizeno\n...\nstateresponsec\nstateresponsetminc\nperbush\npwhite\npblack\npage18_39\nave_hh_sz\npowner\npsch_atlstba\npop_propurban\n\n\n\n\ncount\n50083.000000\n50083.000000\n50083.000000\n50083.000000\n50083.000000\n50083.000000\n50083.000000\n50083.000000\n50083.000000\n50083.000000\n...\n50080.000000\n50080.000000\n50048.000000\n48217.000000\n48047.000000\n48217.000000\n48221.000000\n48214.000000\n48215.000000\n48217.000000\n\n\nmean\n0.666813\n0.333187\n1.333546\n0.222311\n0.222211\n1.667113\n0.166723\n0.166623\n0.166723\n0.166743\n...\n0.017717\n0.004273\n0.487940\n0.819599\n0.086710\n0.321694\n2.429012\n0.669418\n0.391661\n0.871968\n\n\nstd\n0.471357\n0.471357\n1.154606\n0.415803\n0.415736\n1.490771\n0.372732\n0.372643\n0.372732\n0.372750\n...\n0.007516\n0.009112\n0.078735\n0.168561\n0.135868\n0.103039\n0.378115\n0.193405\n0.186599\n0.258654\n\n\nmin\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n...\n0.000000\n-0.047619\n0.090909\n0.009418\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n\n\n25%\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n...\n0.012862\n-0.001388\n0.444444\n0.755845\n0.014729\n0.258311\n2.210000\n0.560222\n0.235647\n0.884929\n\n\n50%\n1.000000\n0.000000\n1.000000\n0.000000\n0.000000\n2.000000\n0.000000\n0.000000\n0.000000\n0.000000\n...\n0.019881\n0.001779\n0.484848\n0.872797\n0.036554\n0.305534\n2.440000\n0.712296\n0.373744\n1.000000\n\n\n75%\n1.000000\n1.000000\n2.000000\n0.000000\n0.000000\n3.000000\n0.000000\n0.000000\n0.000000\n0.000000\n...\n0.020806\n0.010545\n0.525253\n0.938827\n0.090882\n0.369132\n2.660000\n0.816798\n0.530036\n1.000000\n\n\nmax\n1.000000\n1.000000\n3.000000\n1.000000\n1.000000\n4.000000\n1.000000\n1.000000\n1.000000\n1.000000\n...\n0.052632\n0.111111\n0.731959\n1.000000\n0.989622\n0.997544\n5.270000\n1.000000\n1.000000\n1.000000\n\n\n\n\n8 rows × 39 columns\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n\n    \n  \n\n\n\nprint(\"Treatment column unique values:\", df['treatment'].unique())\nprint(\"Donation outcome:\", df['gave'].unique())\n\nTreatment column unique values: [0 1]\nDonation outcome: [0 1]\n\n\n\n# Calculate donation rate by treatment group\nsummary = df.groupby(\"treatment\")[\"gave\"].mean().reset_index()\nsummary.columns = [\"Treatment Group\", \"Donation Rate\"]\nsummary\n\n\n  \n    \n\n\n\n\n\n\nTreatment Group\nDonation Rate\n\n\n\n\n0\n0\n0.017858\n\n\n1\n1\n0.022039\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n\n  \n    \n    \n\n  \n    \n  \n    \n    \n  \n\n    \n  \n\n\n\nimport statsmodels.api as sm\n\n# X = treatment dummy, Y = donation outcome\nX = df[[\"treatment\"]]\nX = sm.add_constant(X)\ny = df[\"gave\"]\n\nmodel = sm.OLS(y, X).fit()\nprint(model.summary())\n\n                            OLS Regression Results                            \n==============================================================================\nDep. Variable:                   gave   R-squared:                       0.000\nModel:                            OLS   Adj. R-squared:                  0.000\nMethod:                 Least Squares   F-statistic:                     9.618\nDate:                Sun, 20 Apr 2025   Prob (F-statistic):            0.00193\nTime:                        01:11:38   Log-Likelihood:                 26630.\nNo. Observations:               50083   AIC:                        -5.326e+04\nDf Residuals:                   50081   BIC:                        -5.324e+04\nDf Model:                           1                                         \nCovariance Type:            nonrobust                                         \n==============================================================================\n                 coef    std err          t      P&gt;|t|      [0.025      0.975]\n------------------------------------------------------------------------------\nconst          0.0179      0.001     16.225      0.000       0.016       0.020\ntreatment      0.0042      0.001      3.101      0.002       0.002       0.007\n==============================================================================\nOmnibus:                    59814.280   Durbin-Watson:                   2.005\nProb(Omnibus):                  0.000   Jarque-Bera (JB):          4317152.727\nSkew:                           6.740   Prob(JB):                         0.00\nKurtosis:                      46.440   Cond. No.                         3.23\n==============================================================================\n\nNotes:\n[1] Standard Errors assume that the covariance matrix of the errors is correctly specified."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Mohammed Alshaghathirah",
    "section": "",
    "text": "Hello! I’m Mohammed Alshaghathirah, a graduate student pursuing a Master of Quantitative Finance at UC San Diego.\nI have a strong background in procurement, sales, and administrative coordination, with experience across both the retail and e-commerce sectors. I’m passionate about financial data analysis, business operations, and using technology to drive smart decision-making.\n\n\n\n\n\nSeptember 2015 – September 2017\n- Helped organize events including Saudi National Day.\n- Led a team of Saudi students at international festivals.\n\n\n\nApril 2020 – January 2023\n- Managed advertising campaigns through social media.\n- Built strong supplier and customer relationships.\n- Analyzed marketing and merchandising performance.\n- Sold coffee to local coffee shops and restaurants.\n- Sourced products and negotiated supplier deals.\n\n\n\nJanuary 2023 – September 2024\n- Oversaw full supply chain operations.\n- Ensured timely flow of goods from suppliers to retailers.\n- Managed sales department operations.\n- Handled food redistribution to markets and hypermarkets.\n\n\n\n\n\n\nNative Arabic\n\nFluent English\n\n\n\n\n\n\nMS Office, Google Drive, Email\n\nData Analysis, Time Management\n\nProblem-Solving, Communication\n\n\nThank you for visiting my website! Feel free to check out my Projects to see my academic work and personal data projects."
  },
  {
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "Mohammed Alshaghathirah",
    "section": "",
    "text": "September 2015 – September 2017\n- Helped organize events including Saudi National Day.\n- Led a team of Saudi students at international festivals.\n\n\n\nApril 2020 – January 2023\n- Managed advertising campaigns through social media.\n- Built strong supplier and customer relationships.\n- Analyzed marketing and merchandising performance.\n- Sold coffee to local coffee shops and restaurants.\n- Sourced products and negotiated supplier deals.\n\n\n\nJanuary 2023 – September 2024\n- Oversaw full supply chain operations.\n- Ensured timely flow of goods from suppliers to retailers.\n- Managed sales department operations.\n- Handled food redistribution to markets and hypermarkets."
  },
  {
    "objectID": "index.html#languages",
    "href": "index.html#languages",
    "title": "Mohammed Alshaghathirah",
    "section": "",
    "text": "Native Arabic\n\nFluent English"
  },
  {
    "objectID": "index.html#skills",
    "href": "index.html#skills",
    "title": "Mohammed Alshaghathirah",
    "section": "",
    "text": "MS Office, Google Drive, Email\n\nData Analysis, Time Management\n\nProblem-Solving, Communication\n\n\nThank you for visiting my website! Feel free to check out my Projects to see my academic work and personal data projects."
  }
]